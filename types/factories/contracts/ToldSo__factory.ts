/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ToldSo, ToldSoInterface } from "../../contracts/ToldSo";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "body",
            type: "string",
          },
          {
            internalType: "string",
            name: "media",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ToldSo.Post",
        name: "post",
        type: "tuple",
      },
    ],
    name: "PostCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "body",
            type: "string",
          },
          {
            internalType: "string",
            name: "media",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ToldSo.Post",
        name: "post",
        type: "tuple",
      },
    ],
    name: "PostUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "body",
        type: "string",
      },
      {
        internalType: "string",
        name: "media",
        type: "string",
      },
    ],
    name: "createPost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getPosts",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "body",
            type: "string",
          },
          {
            internalType: "string",
            name: "media",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct ToldSo.Post[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "body",
        type: "string",
      },
      {
        internalType: "string",
        name: "media",
        type: "string",
      },
    ],
    name: "updatePost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611148806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634caf9d0b14610046578063cc05adb014610076578063e8a4a1eb14610092575b600080fd5b610060600480360381019061005b9190610712565b6100ae565b60405161006d919061091b565b60405180910390f35b610090600480360381019061008b9190610a9e565b61030c565b005b6100ac60048036038101906100a79190610b59565b610570565b005b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610301578382906000526020600020906004020160405180608001604052908160008201805461014290610c2f565b80601f016020809104026020016040519081016040528092919081815260200182805461016e90610c2f565b80156101bb5780601f10610190576101008083540402835291602001916101bb565b820191906000526020600020905b81548152906001019060200180831161019e57829003601f168201915b505050505081526020016001820180546101d490610c2f565b80601f016020809104026020016040519081016040528092919081815260200182805461020090610c2f565b801561024d5780601f106102225761010080835404028352916020019161024d565b820191906000526020600020905b81548152906001019060200180831161023057829003601f168201915b5050505050815260200160028201805461026690610c2f565b80601f016020809104026020016040519081016040528092919081815260200182805461029290610c2f565b80156102df5780601f106102b4576101008083540402835291602001916102df565b820191906000526020600020905b8154815290600101906020018083116102c257829003601f168201915b505050505081526020016003820154815250508152602001906001019061010f565b505050509050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508410610390576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038790610cbd565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002085815481106103e3576103e2610cdd565b5b906000526020600020906004020160030154905061070881426104069190610d3b565b10610446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043d90610de1565b60405180910390fd5b6000604051806080016040528086815260200185815260200184815260200183815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002087815481106104bd576104bc610cdd565b5b906000526020600020906004020160008201518160000190816104e09190610fad565b5060208201518160010190816104f69190610fad565b50604082015181600201908161050c9190610fad565b50606082015181600301559050503373ffffffffffffffffffffffffffffffffffffffff167f6c627e181769e370b54287000fbeaab2399f6eff699d12e552b7a7e6b3916a378260405161056091906110f0565b60405180910390a2505050505050565b60006040518060800160405280858152602001848152602001838152602001428152509050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000190816106139190610fad565b5060208201518160010190816106299190610fad565b50604082015181600201908161063f9190610fad565b506060820151816003015550503373ffffffffffffffffffffffffffffffffffffffff167f1e3121c73f325ae2c77890965689fee68e22925b74dab90db25a9add7611bb188260405161069291906110f0565b60405180910390a250505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106df826106b4565b9050919050565b6106ef816106d4565b81146106fa57600080fd5b50565b60008135905061070c816106e6565b92915050565b600060208284031215610728576107276106aa565b5b6000610736848285016106fd565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107a557808201518184015260208101905061078a565b60008484015250505050565b6000601f19601f8301169050919050565b60006107cd8261076b565b6107d78185610776565b93506107e7818560208601610787565b6107f0816107b1565b840191505092915050565b6000819050919050565b61080e816107fb565b82525050565b6000608083016000830151848203600086015261083182826107c2565b9150506020830151848203602086015261084b82826107c2565b9150506040830151848203604086015261086582826107c2565b915050606083015161087a6060860182610805565b508091505092915050565b60006108918383610814565b905092915050565b6000602082019050919050565b60006108b18261073f565b6108bb818561074a565b9350836020820285016108cd8561075b565b8060005b8581101561090957848403895281516108ea8582610885565b94506108f583610899565b925060208a019950506001810190506108d1565b50829750879550505050505092915050565b6000602082019050818103600083015261093581846108a6565b905092915050565b610946816107fb565b811461095157600080fd5b50565b6000813590506109638161093d565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109ab826107b1565b810181811067ffffffffffffffff821117156109ca576109c9610973565b5b80604052505050565b60006109dd6106a0565b90506109e982826109a2565b919050565b600067ffffffffffffffff821115610a0957610a08610973565b5b610a12826107b1565b9050602081019050919050565b82818337600083830152505050565b6000610a41610a3c846109ee565b6109d3565b905082815260208101848484011115610a5d57610a5c61096e565b5b610a68848285610a1f565b509392505050565b600082601f830112610a8557610a84610969565b5b8135610a95848260208601610a2e565b91505092915050565b60008060008060808587031215610ab857610ab76106aa565b5b6000610ac687828801610954565b945050602085013567ffffffffffffffff811115610ae757610ae66106af565b5b610af387828801610a70565b935050604085013567ffffffffffffffff811115610b1457610b136106af565b5b610b2087828801610a70565b925050606085013567ffffffffffffffff811115610b4157610b406106af565b5b610b4d87828801610a70565b91505092959194509250565b600080600060608486031215610b7257610b716106aa565b5b600084013567ffffffffffffffff811115610b9057610b8f6106af565b5b610b9c86828701610a70565b935050602084013567ffffffffffffffff811115610bbd57610bbc6106af565b5b610bc986828701610a70565b925050604084013567ffffffffffffffff811115610bea57610be96106af565b5b610bf686828701610a70565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c4757607f821691505b602082108103610c5a57610c59610c00565b5b50919050565b600082825260208201905092915050565b7f546f6c64536f3a20506f737420646f6573206e6f742065786973740000000000600082015250565b6000610ca7601b83610c60565b9150610cb282610c71565b602082019050919050565b60006020820190508181036000830152610cd681610c9a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d46826107fb565b9150610d51836107fb565b9250828203905081811115610d6957610d68610d0c565b5b92915050565b7f546f6c64536f3a20506f737420697320746f6f206f6c6420746f20757064617460008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b6000610dcb602183610c60565b9150610dd682610d6f565b604082019050919050565b60006020820190508181036000830152610dfa81610dbe565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610e637fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610e26565b610e6d8683610e26565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610eaa610ea5610ea0846107fb565b610e85565b6107fb565b9050919050565b6000819050919050565b610ec483610e8f565b610ed8610ed082610eb1565b848454610e33565b825550505050565b600090565b610eed610ee0565b610ef8818484610ebb565b505050565b5b81811015610f1c57610f11600082610ee5565b600181019050610efe565b5050565b601f821115610f6157610f3281610e01565b610f3b84610e16565b81016020851015610f4a578190505b610f5e610f5685610e16565b830182610efd565b50505b505050565b600082821c905092915050565b6000610f8460001984600802610f66565b1980831691505092915050565b6000610f9d8383610f73565b9150826002028217905092915050565b610fb68261076b565b67ffffffffffffffff811115610fcf57610fce610973565b5b610fd98254610c2f565b610fe4828285610f20565b600060209050601f8311600181146110175760008415611005578287015190505b61100f8582610f91565b865550611077565b601f19841661102586610e01565b60005b8281101561104d57848901518255600182019150602085019450602081019050611028565b8683101561106a5784890151611066601f891682610f73565b8355505b6001600288020188555050505b505050505050565b6000608083016000830151848203600086015261109c82826107c2565b915050602083015184820360208601526110b682826107c2565b915050604083015184820360408601526110d082826107c2565b91505060608301516110e56060860182610805565b508091505092915050565b6000602082019050818103600083015261110a818461107f565b90509291505056fea2646970667358221220029565c3e9b7924bd77224344951a56f2b2449a733ee0c686fc703b5627b815d64736f6c63430008110033";

type ToldSoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ToldSoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ToldSo__factory extends ContractFactory {
  constructor(...args: ToldSoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ToldSo> {
    return super.deploy(overrides || {}) as Promise<ToldSo>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ToldSo {
    return super.attach(address) as ToldSo;
  }
  override connect(signer: Signer): ToldSo__factory {
    return super.connect(signer) as ToldSo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ToldSoInterface {
    return new utils.Interface(_abi) as ToldSoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ToldSo {
    return new Contract(address, _abi, signerOrProvider) as ToldSo;
  }
}
